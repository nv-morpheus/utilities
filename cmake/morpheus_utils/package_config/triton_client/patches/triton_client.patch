diff --git a/src/c++/library/CMakeLists.txt b/src/c++/library/CMakeLists.txt
index cdee03e..f931c23 100644
--- a/src/c++/library/CMakeLists.txt
+++ b/src/c++/library/CMakeLists.txt
@@ -142,7 +142,7 @@ if(TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER)
        grpcclient
        PROPERTIES
          LINK_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/libgrpcclient.ldscript
-         LINK_FLAGS "-Wl,--version-script=libgrpcclient.ldscript"
+         LINK_FLAGS "-Wl,--version-script=${CMAKE_CURRENT_BINARY_DIR}/libgrpcclient.ldscript"
      )
   endif() # NOT WIN32 AND NOT TRITON_KEEP_TYPEINFO
 
@@ -326,7 +326,7 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER)
        httpclient
        PROPERTIES
          LINK_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/libhttpclient.ldscript
-         LINK_FLAGS "-Wl,--version-script=libhttpclient.ldscript"
+         LINK_FLAGS "-Wl,--version-script=${CMAKE_CURRENT_BINARY_DIR}/libhttpclient.ldscript"
      )
   endif() # NOT WIN32
 
diff --git a/src/c++/library/http_client.cc b/src/c++/library/http_client.cc
index 9f2f5ab..c2379ba 100644
--- a/src/c++/library/http_client.cc
+++ b/src/c++/library/http_client.cc
@@ -37,6 +37,7 @@
 #include <iostream>
 #include <string>
 #include <utility>
+#include <mutex>
 
 #include "common.h"
 
@@ -70,6 +71,13 @@ constexpr char kContentLengthHTTPHeader[] = "Content-Length";
 // initialization before any other threads are created and before any
 // curl methods are used. The curl_global static object is used to
 // perform this initialization.
+
+class CurlGlobal;
+
+static std::mutex curl_global_mutex{};
+static CurlGlobal* curl_global = nullptr;
+
+
 class CurlGlobal {
  public:
   ~CurlGlobal();
@@ -78,7 +86,13 @@ class CurlGlobal {
 
   static const CurlGlobal& Get()
   {
-    static CurlGlobal* curl_global = new CurlGlobal();
+    if(curl_global == nullptr) {
+      auto lock = std::unique_lock(curl_global_mutex);
+      if(curl_global == nullptr) {
+        curl_global = new CurlGlobal();
+      }
+    }
+    // static CurlGlobal* curl_global = new CurlGlobal();
     return *curl_global;
   }
 
@@ -102,7 +116,12 @@ CurlGlobal::~CurlGlobal()
 
 class CurlGlobalDestroyer {
  public:
-  ~CurlGlobalDestroyer() { delete &CurlGlobal::Get(); }
+  ~CurlGlobalDestroyer() {
+    auto lock = std::unique_lock(curl_global_mutex);
+    if (curl_global != nullptr) {
+      delete &CurlGlobal::Get();
+    }
+  }
 };
 
 static CurlGlobalDestroyer curl_global_destroyer_;
